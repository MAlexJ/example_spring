buildscript {
    new BufferedReader(new FileReader(file('../gradle.properties')))
            .withCloseable { reader ->
                String line
                while ((line = reader.readLine()) != null) {
                    println(line)
                    String name = line.substring(0, line.indexOf('='))
                    String value = line.substring(line.indexOf('=') + 1)
                    project.ext.set(name, value)
                }
            }
}

plugins {
    id 'java'
    id "com.github.ben-manes.versions" version "${benManesVersions}"
}

group = 'com.malexj'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = "${javaVersion}"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework:spring-context:${springContextVersion}"
    implementation "org.yaml:snakeyaml:${snakeyamlVersion}"
    implementation "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    // tests
    implementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
    runtimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed"
    }
}